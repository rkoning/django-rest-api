# Generated by Django 2.1.3 on 2018-12-02 06:18
from django.db import migrations
import json

def to_integer(string):
    try:
        return int(string)
    except:
        return 0

def from_json(apps, schema_editor):
    with open('npt_adwords.json') as json_file:
        json_data = json.load(json_file)
        Account = apps.get_model('dashboard', 'Account')
        Campaign = apps.get_model('dashboard', 'Campaign')
        Advertisement = apps.get_model('dashboard', 'Advertisement')
        for record in json_data:
            try:
                account = Account.objects.get(ext_account_id = int(record["ExternalCustomerId"]))
            except Exception:
                account = Account(ext_account_id = int(record["ExternalCustomerId"]),
                                account_descriptive_name = record["AccountDescriptiveName"],
                                customer_descriptive_name = record["CustomerDescriptiveName"]
                )
                account.save()

            try:
                campaign = Campaign.objects.get(ext_campaign_id = int(record["CampaignId"]))
            except Exception:
                campaign = Campaign(ext_campaign_id = int(record["CampaignId"]),
                                    campaign_name = record["CampaignName"],
                                    campaign_status = record["CampaignStatus"],
                                    account = account)
                campaign.save()

            ad = Advertisement(campaign = campaign,
                                city_criteria_id = to_integer(record["CityCriteriaId"]),
                                country_criteria_id = to_integer(record["CountryCriteriaId"]),
                                metro_criteria_id = to_integer(record["MetroCriteriaId"]),
                                most_specific_criteria_id = to_integer(record["MostSpecificCriteriaId"]),
                                region_criteria_id = to_integer(record["RegionCriteriaId"]),
                                date = record["Date"],
                                device = record["Device"],
                                is_targeting_location = True if record["IsTargetingLocation"] == 'true' else False,
                                location_type = record["LocationType"],
                                average_position = record["AveragePosition"],
                                clicks = record["Clicks"],
                                conversions = record["Conversions"],
                                conversion_value = record["ConversionValue"],
                                cost = record["Cost"],
                                impressions = record["Impressions"],
                                interactions = record["Interactions"],
                                interaction_types = record["InteractionTypes"].replace('[]', '').split(','),
                                video_views = record["VideoViews"])
            ad.save()

class Migration(migrations.Migration):

    dependencies = [
        ('dashboard', '0002_auto_20181201_2316'),
    ]

    operations = [

        migrations.RunPython(from_json)
    ]
